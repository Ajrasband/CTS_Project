--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION;
CREATE ROLE ubuntu;
ALTER ROLE ubuntu WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN NOREPLICATION;






--
-- Database creation
--

CREATE DATABASE "AppName_development" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "AppName_test" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "CTS_Project_development" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "CTS_Project_test" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "myProject_development" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "myProject_test" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "sample-project_development" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE "sample-project_test" WITH TEMPLATE = template0 OWNER = ubuntu ENCODING = 'UTF8';
CREATE DATABASE ubuntu WITH TEMPLATE = template0 OWNER = ubuntu;


\connect "AppName_development"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ar_internal_metadata OWNER TO ubuntu;

--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO ubuntu;

--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	development	2017-06-12 23:35:30.318564	2017-06-12 23:35:30.318564
\.


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY schema_migrations (version) FROM stdin;
\.


--
-- Name: ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect "AppName_test"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect "CTS_Project_development"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ar_internal_metadata OWNER TO ubuntu;

--
-- Name: blogs; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE blogs (
    id integer NOT NULL,
    title character varying,
    body text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    slug character varying,
    status integer DEFAULT 0,
    topic_id integer
);


ALTER TABLE public.blogs OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE blogs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.blogs_id_seq OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE blogs_id_seq OWNED BY blogs.id;


--
-- Name: friendly_id_slugs; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE friendly_id_slugs (
    id integer NOT NULL,
    slug character varying NOT NULL,
    sluggable_id integer NOT NULL,
    sluggable_type character varying(50),
    scope character varying,
    created_at timestamp without time zone
);


ALTER TABLE public.friendly_id_slugs OWNER TO ubuntu;

--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE friendly_id_slugs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.friendly_id_slugs_id_seq OWNER TO ubuntu;

--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE friendly_id_slugs_id_seq OWNED BY friendly_id_slugs.id;


--
-- Name: portfolios; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE portfolios (
    id integer NOT NULL,
    title character varying,
    subtitle character varying,
    body text,
    main_image text,
    thumb_image text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.portfolios OWNER TO ubuntu;

--
-- Name: portfolios_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE portfolios_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.portfolios_id_seq OWNER TO ubuntu;

--
-- Name: portfolios_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE portfolios_id_seq OWNED BY portfolios.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO ubuntu;

--
-- Name: skills; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE skills (
    id integer NOT NULL,
    title character varying,
    percent_utilized integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    badge text
);


ALTER TABLE public.skills OWNER TO ubuntu;

--
-- Name: skills_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE skills_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.skills_id_seq OWNER TO ubuntu;

--
-- Name: skills_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE skills_id_seq OWNED BY skills.id;


--
-- Name: technologies; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE technologies (
    id integer NOT NULL,
    name character varying,
    portfolio_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.technologies OWNER TO ubuntu;

--
-- Name: technologies_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE technologies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.technologies_id_seq OWNER TO ubuntu;

--
-- Name: technologies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE technologies_id_seq OWNED BY technologies.id;


--
-- Name: topics; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE topics (
    id integer NOT NULL,
    title character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.topics OWNER TO ubuntu;

--
-- Name: topics_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.topics_id_seq OWNER TO ubuntu;

--
-- Name: topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE topics_id_seq OWNED BY topics.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    email character varying DEFAULT ''::character varying NOT NULL,
    encrypted_password character varying DEFAULT ''::character varying NOT NULL,
    name character varying,
    reset_password_token character varying,
    reset_password_sent_at timestamp without time zone,
    remember_created_at timestamp without time zone,
    sign_in_count integer DEFAULT 0 NOT NULL,
    current_sign_in_at timestamp without time zone,
    last_sign_in_at timestamp without time zone,
    current_sign_in_ip inet,
    last_sign_in_ip inet,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    roles character varying
);


ALTER TABLE public.users OWNER TO ubuntu;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO ubuntu;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY blogs ALTER COLUMN id SET DEFAULT nextval('blogs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY friendly_id_slugs ALTER COLUMN id SET DEFAULT nextval('friendly_id_slugs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY portfolios ALTER COLUMN id SET DEFAULT nextval('portfolios_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY skills ALTER COLUMN id SET DEFAULT nextval('skills_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY technologies ALTER COLUMN id SET DEFAULT nextval('technologies_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY topics ALTER COLUMN id SET DEFAULT nextval('topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	development	2017-07-10 18:04:24.541413	2017-07-10 18:04:24.541413
\.


--
-- Data for Name: blogs; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY blogs (id, title, body, created_at, updated_at, slug, status, topic_id) FROM stdin;
1	My blog post 0	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.195471	2017-07-10 18:04:25.195471	my-blog-post-0	0	3
2	My blog post 1	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.20791	2017-07-10 18:04:25.20791	my-blog-post-1	0	3
3	My blog post 2	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.221621	2017-07-10 18:04:25.221621	my-blog-post-2	0	3
4	My blog post 3	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.258162	2017-07-10 18:04:25.258162	my-blog-post-3	0	3
5	My blog post 4	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.268882	2017-07-10 18:04:25.268882	my-blog-post-4	0	3
6	My blog post 5	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.280698	2017-07-10 18:04:25.280698	my-blog-post-5	0	3
7	My blog post 6	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.29423	2017-07-10 18:04:25.29423	my-blog-post-6	0	3
8	My blog post 7	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.305901	2017-07-10 18:04:25.305901	my-blog-post-7	0	3
9	My blog post 8	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.324066	2017-07-10 18:04:25.324066	my-blog-post-8	0	3
10	My blog post 9	Bacon ipsum dolor amet capicola ham rump ribeye corned beef bacon. T-bone cow ham jowl, burgdoggen kielbasa porchetta frankfurter fatback pork belly pork chop. Rump beef turducken tri-tip salami. Tri-tip pancetta short loin meatloaf, beef chicken shoulder pork belly meatball landjaeger fatback. Filet mignon flank landjaeger boudin meatball, pig rump beef. Jowl prosciutto shoulder, ball tip pork belly rump shankle pork chop boudin corned beef ground round beef tail biltong. Strip steak doner cupim ham ground round kevin drumstick flank.	2017-07-10 18:04:25.339454	2017-07-10 18:04:25.339454	my-blog-post-9	0	3
11	ASFASGA	lsakjhfglk lkjlksjhdgk jlkjh jfdhgk jsdfhglk hdflkjg hsf ghkjd 	2017-07-19 14:52:24.010884	2017-07-19 14:52:24.010884	asfasga	0	\N
\.


--
-- Name: blogs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('blogs_id_seq', 11, true);


--
-- Data for Name: friendly_id_slugs; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY friendly_id_slugs (id, slug, sluggable_id, sluggable_type, scope, created_at) FROM stdin;
\.


--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('friendly_id_slugs_id_seq', 1, false);


--
-- Data for Name: portfolios; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY portfolios (id, title, subtitle, body, main_image, thumb_image, created_at, updated_at) FROM stdin;
1	Portfolio title: 0	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.448965	2017-07-10 18:04:25.448965
2	Portfolio title: 1	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.455802	2017-07-10 18:04:25.455802
3	Portfolio title: 2	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.466236	2017-07-10 18:04:25.466236
4	Portfolio title: 3	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.471983	2017-07-10 18:04:25.471983
5	Portfolio title: 4	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.485816	2017-07-10 18:04:25.485816
6	Portfolio title: 5	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.491195	2017-07-10 18:04:25.491195
7	Portfolio title: 6	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.49607	2017-07-10 18:04:25.49607
8	Portfolio title: 7	Ruby on Rails	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.501577	2017-07-10 18:04:25.501577
9	Portfolio title: 0	Angular	Tail burgdoggen ribeye landjaeger turkey. Shankle tenderloin shank kielbasa brisket, sausage tail doner ham short loin alcatra hamburger. Chicken pig brisket turkey beef short loin pork loin, andouille frankfurter corned beef venison. Kielbasa corned beef prosciutto pastrami meatloaf short loin kevin. Drumstick ball tip pig tongue rump. Tongue burgdoggen ham brisket, pork chop meatball jowl cow boudin.	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-10 18:04:25.507956	2017-07-10 18:04:25.507956
10	asdffs	asddsas	asdfad fassdfbasdfbfasdfbasdf	http://placehold.it/600x400	http://placehold.it/350x200	2017-07-18 16:09:05.749645	2017-07-18 16:09:05.749645
\.


--
-- Name: portfolios_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('portfolios_id_seq', 10, true);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY schema_migrations (version) FROM stdin;
20170704200137
20170627164026
20170627161543
20170627145908
20170621171431
20170615144234
20170621174657
20170627144729
20170621171857
20170613161327
20170615141734
20170725150913
\.


--
-- Data for Name: skills; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY skills (id, title, percent_utilized, created_at, updated_at, badge) FROM stdin;
1	Rails 0	15	2017-07-10 18:04:25.370978	2017-07-10 18:04:25.370978	http://placehold.it/250x250
2	Rails 1	15	2017-07-10 18:04:25.379191	2017-07-10 18:04:25.379191	http://placehold.it/250x250
3	Rails 2	15	2017-07-10 18:04:25.389063	2017-07-10 18:04:25.389063	http://placehold.it/250x250
4	Rails 3	15	2017-07-10 18:04:25.41869	2017-07-10 18:04:25.41869	http://placehold.it/250x250
5	Rails 4	15	2017-07-10 18:04:25.424639	2017-07-10 18:04:25.424639	http://placehold.it/250x250
\.


--
-- Name: skills_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('skills_id_seq', 5, true);


--
-- Data for Name: technologies; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY technologies (id, name, portfolio_id, created_at, updated_at) FROM stdin;
1	Technology 0	9	2017-07-10 18:04:25.558283	2017-07-10 18:04:25.558283
2	Technology 1	9	2017-07-10 18:04:25.575517	2017-07-10 18:04:25.575517
3	Technology 2	9	2017-07-10 18:04:25.586031	2017-07-10 18:04:25.586031
4	a	10	2017-07-18 16:11:16.905463	2017-07-18 16:11:16.905463
5	b	10	2017-07-18 16:11:16.908495	2017-07-18 16:11:16.908495
6	c	10	2017-07-18 16:11:16.909597	2017-07-18 16:11:16.909597
7	a	10	2017-07-18 16:11:29.541115	2017-07-18 16:11:29.541115
8	b	10	2017-07-18 16:11:29.542999	2017-07-18 16:11:29.542999
9	c	10	2017-07-18 16:11:29.544404	2017-07-18 16:11:29.544404
\.


--
-- Name: technologies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('technologies_id_seq', 9, true);


--
-- Data for Name: topics; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY topics (id, title, created_at, updated_at) FROM stdin;
1	Topic 0	2017-07-10 18:04:24.985703	2017-07-10 18:04:24.985703
2	Topic 1	2017-07-10 18:04:25.000228	2017-07-10 18:04:25.000228
3	Topic 2	2017-07-10 18:04:25.005017	2017-07-10 18:04:25.005017
\.


--
-- Name: topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('topics_id_seq', 3, true);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY users (id, email, encrypted_password, name, reset_password_token, reset_password_sent_at, remember_created_at, sign_in_count, current_sign_in_at, last_sign_in_at, current_sign_in_ip, last_sign_in_ip, created_at, updated_at, roles) FROM stdin;
1	ajrazzy99@gmail.com	$2a$11$ReCfHPH.aQIQd68XeqHuhe/1al7lEpr.a/4lbhLFXwksCLMaL.Wke	Aaron Rasband	\N	\N	\N	5	2017-07-27 14:34:07.804058	2017-07-26 17:02:13.128879	205.118.122.183	205.118.122.183	2017-07-25 15:44:35.386126	2017-07-27 14:34:07.80748	site_admin
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('users_id_seq', 1, true);


--
-- Name: ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: blogs_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY blogs
    ADD CONSTRAINT blogs_pkey PRIMARY KEY (id);


--
-- Name: friendly_id_slugs_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY friendly_id_slugs
    ADD CONSTRAINT friendly_id_slugs_pkey PRIMARY KEY (id);


--
-- Name: portfolios_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY portfolios
    ADD CONSTRAINT portfolios_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: skills_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY skills
    ADD CONSTRAINT skills_pkey PRIMARY KEY (id);


--
-- Name: technologies_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY technologies
    ADD CONSTRAINT technologies_pkey PRIMARY KEY (id);


--
-- Name: topics_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY topics
    ADD CONSTRAINT topics_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: index_blogs_on_slug; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_blogs_on_slug ON blogs USING btree (slug);


--
-- Name: index_blogs_on_topic_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_blogs_on_topic_id ON blogs USING btree (topic_id);


--
-- Name: index_friendly_id_slugs_on_slug_and_sluggable_type; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_slug_and_sluggable_type ON friendly_id_slugs USING btree (slug, sluggable_type);


--
-- Name: index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope ON friendly_id_slugs USING btree (slug, sluggable_type, scope);


--
-- Name: index_friendly_id_slugs_on_sluggable_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_sluggable_id ON friendly_id_slugs USING btree (sluggable_id);


--
-- Name: index_friendly_id_slugs_on_sluggable_type; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_sluggable_type ON friendly_id_slugs USING btree (sluggable_type);


--
-- Name: index_technologies_on_portfolio_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_technologies_on_portfolio_id ON technologies USING btree (portfolio_id);


--
-- Name: index_users_on_email; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_users_on_email ON users USING btree (email);


--
-- Name: index_users_on_reset_password_token; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_users_on_reset_password_token ON users USING btree (reset_password_token);


--
-- Name: fk_rails_7f5637ea0d; Type: FK CONSTRAINT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY blogs
    ADD CONSTRAINT fk_rails_7f5637ea0d FOREIGN KEY (topic_id) REFERENCES topics(id);


--
-- Name: fk_rails_cc5ab4a1c3; Type: FK CONSTRAINT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY technologies
    ADD CONSTRAINT fk_rails_cc5ab4a1c3 FOREIGN KEY (portfolio_id) REFERENCES portfolios(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect "CTS_Project_test"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ar_internal_metadata OWNER TO ubuntu;

--
-- Name: blogs; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE blogs (
    id integer NOT NULL,
    title character varying,
    body text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    slug character varying,
    status integer DEFAULT 0,
    topic_id integer
);


ALTER TABLE public.blogs OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE blogs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.blogs_id_seq OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE blogs_id_seq OWNED BY blogs.id;


--
-- Name: friendly_id_slugs; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE friendly_id_slugs (
    id integer NOT NULL,
    slug character varying NOT NULL,
    sluggable_id integer NOT NULL,
    sluggable_type character varying(50),
    scope character varying,
    created_at timestamp without time zone
);


ALTER TABLE public.friendly_id_slugs OWNER TO ubuntu;

--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE friendly_id_slugs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.friendly_id_slugs_id_seq OWNER TO ubuntu;

--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE friendly_id_slugs_id_seq OWNED BY friendly_id_slugs.id;


--
-- Name: portfolios; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE portfolios (
    id integer NOT NULL,
    title character varying,
    subtitle character varying,
    body text,
    main_image text,
    thumb_image text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.portfolios OWNER TO ubuntu;

--
-- Name: portfolios_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE portfolios_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.portfolios_id_seq OWNER TO ubuntu;

--
-- Name: portfolios_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE portfolios_id_seq OWNED BY portfolios.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO ubuntu;

--
-- Name: skills; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE skills (
    id integer NOT NULL,
    title character varying,
    percent_utilized integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL,
    badge text
);


ALTER TABLE public.skills OWNER TO ubuntu;

--
-- Name: skills_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE skills_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.skills_id_seq OWNER TO ubuntu;

--
-- Name: skills_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE skills_id_seq OWNED BY skills.id;


--
-- Name: technologies; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE technologies (
    id integer NOT NULL,
    name character varying,
    portfolio_id integer,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.technologies OWNER TO ubuntu;

--
-- Name: technologies_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE technologies_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.technologies_id_seq OWNER TO ubuntu;

--
-- Name: technologies_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE technologies_id_seq OWNED BY technologies.id;


--
-- Name: topics; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE topics (
    id integer NOT NULL,
    title character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.topics OWNER TO ubuntu;

--
-- Name: topics_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE topics_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.topics_id_seq OWNER TO ubuntu;

--
-- Name: topics_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE topics_id_seq OWNED BY topics.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE users (
    id integer NOT NULL,
    email character varying DEFAULT ''::character varying NOT NULL,
    encrypted_password character varying DEFAULT ''::character varying NOT NULL,
    name character varying,
    reset_password_token character varying,
    reset_password_sent_at timestamp without time zone,
    remember_created_at timestamp without time zone,
    sign_in_count integer DEFAULT 0 NOT NULL,
    current_sign_in_at timestamp without time zone,
    last_sign_in_at timestamp without time zone,
    current_sign_in_ip inet,
    last_sign_in_ip inet,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.users OWNER TO ubuntu;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO ubuntu;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY blogs ALTER COLUMN id SET DEFAULT nextval('blogs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY friendly_id_slugs ALTER COLUMN id SET DEFAULT nextval('friendly_id_slugs_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY portfolios ALTER COLUMN id SET DEFAULT nextval('portfolios_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY skills ALTER COLUMN id SET DEFAULT nextval('skills_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY technologies ALTER COLUMN id SET DEFAULT nextval('technologies_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY topics ALTER COLUMN id SET DEFAULT nextval('topics_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	development	2017-07-10 18:04:24.927391	2017-07-10 18:04:24.927391
\.


--
-- Data for Name: blogs; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY blogs (id, title, body, created_at, updated_at, slug, status, topic_id) FROM stdin;
\.


--
-- Name: blogs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('blogs_id_seq', 1, false);


--
-- Data for Name: friendly_id_slugs; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY friendly_id_slugs (id, slug, sluggable_id, sluggable_type, scope, created_at) FROM stdin;
\.


--
-- Name: friendly_id_slugs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('friendly_id_slugs_id_seq', 1, false);


--
-- Data for Name: portfolios; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY portfolios (id, title, subtitle, body, main_image, thumb_image, created_at, updated_at) FROM stdin;
\.


--
-- Name: portfolios_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('portfolios_id_seq', 1, false);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY schema_migrations (version) FROM stdin;
20170704200137
20170627164026
20170627161543
20170627145908
20170621171431
20170615144234
20170621174657
20170627144729
20170621171857
20170613161327
20170615141734
\.


--
-- Data for Name: skills; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY skills (id, title, percent_utilized, created_at, updated_at, badge) FROM stdin;
\.


--
-- Name: skills_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('skills_id_seq', 1, false);


--
-- Data for Name: technologies; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY technologies (id, name, portfolio_id, created_at, updated_at) FROM stdin;
\.


--
-- Name: technologies_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('technologies_id_seq', 1, false);


--
-- Data for Name: topics; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY topics (id, title, created_at, updated_at) FROM stdin;
\.


--
-- Name: topics_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('topics_id_seq', 1, false);


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY users (id, email, encrypted_password, name, reset_password_token, reset_password_sent_at, remember_created_at, sign_in_count, current_sign_in_at, last_sign_in_at, current_sign_in_ip, last_sign_in_ip, created_at, updated_at) FROM stdin;
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('users_id_seq', 1, false);


--
-- Name: ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: blogs_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY blogs
    ADD CONSTRAINT blogs_pkey PRIMARY KEY (id);


--
-- Name: friendly_id_slugs_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY friendly_id_slugs
    ADD CONSTRAINT friendly_id_slugs_pkey PRIMARY KEY (id);


--
-- Name: portfolios_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY portfolios
    ADD CONSTRAINT portfolios_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: skills_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY skills
    ADD CONSTRAINT skills_pkey PRIMARY KEY (id);


--
-- Name: technologies_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY technologies
    ADD CONSTRAINT technologies_pkey PRIMARY KEY (id);


--
-- Name: topics_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY topics
    ADD CONSTRAINT topics_pkey PRIMARY KEY (id);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: index_blogs_on_slug; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_blogs_on_slug ON blogs USING btree (slug);


--
-- Name: index_blogs_on_topic_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_blogs_on_topic_id ON blogs USING btree (topic_id);


--
-- Name: index_friendly_id_slugs_on_slug_and_sluggable_type; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_slug_and_sluggable_type ON friendly_id_slugs USING btree (slug, sluggable_type);


--
-- Name: index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_friendly_id_slugs_on_slug_and_sluggable_type_and_scope ON friendly_id_slugs USING btree (slug, sluggable_type, scope);


--
-- Name: index_friendly_id_slugs_on_sluggable_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_sluggable_id ON friendly_id_slugs USING btree (sluggable_id);


--
-- Name: index_friendly_id_slugs_on_sluggable_type; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_friendly_id_slugs_on_sluggable_type ON friendly_id_slugs USING btree (sluggable_type);


--
-- Name: index_technologies_on_portfolio_id; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE INDEX index_technologies_on_portfolio_id ON technologies USING btree (portfolio_id);


--
-- Name: index_users_on_email; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_users_on_email ON users USING btree (email);


--
-- Name: index_users_on_reset_password_token; Type: INDEX; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE UNIQUE INDEX index_users_on_reset_password_token ON users USING btree (reset_password_token);


--
-- Name: fk_rails_7f5637ea0d; Type: FK CONSTRAINT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY blogs
    ADD CONSTRAINT fk_rails_7f5637ea0d FOREIGN KEY (topic_id) REFERENCES topics(id);


--
-- Name: fk_rails_cc5ab4a1c3; Type: FK CONSTRAINT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY technologies
    ADD CONSTRAINT fk_rails_cc5ab4a1c3 FOREIGN KEY (portfolio_id) REFERENCES portfolios(id);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect "myProject_development"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect "myProject_test"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect postgres

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect -reuse-previous=on "dbname='sample-project_development'"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: ar_internal_metadata; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE ar_internal_metadata (
    key character varying NOT NULL,
    value character varying,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.ar_internal_metadata OWNER TO ubuntu;

--
-- Name: blogs; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE blogs (
    id integer NOT NULL,
    title character varying,
    body text,
    created_at timestamp without time zone NOT NULL,
    updated_at timestamp without time zone NOT NULL
);


ALTER TABLE public.blogs OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE; Schema: public; Owner: ubuntu
--

CREATE SEQUENCE blogs_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.blogs_id_seq OWNER TO ubuntu;

--
-- Name: blogs_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ubuntu
--

ALTER SEQUENCE blogs_id_seq OWNED BY blogs.id;


--
-- Name: schema_migrations; Type: TABLE; Schema: public; Owner: ubuntu; Tablespace: 
--

CREATE TABLE schema_migrations (
    version character varying NOT NULL
);


ALTER TABLE public.schema_migrations OWNER TO ubuntu;

--
-- Name: id; Type: DEFAULT; Schema: public; Owner: ubuntu
--

ALTER TABLE ONLY blogs ALTER COLUMN id SET DEFAULT nextval('blogs_id_seq'::regclass);


--
-- Data for Name: ar_internal_metadata; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY ar_internal_metadata (key, value, created_at, updated_at) FROM stdin;
environment	development	2016-12-30 17:36:59.248625	2016-12-30 17:36:59.248625
\.


--
-- Data for Name: blogs; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY blogs (id, title, body, created_at, updated_at) FROM stdin;
\.


--
-- Name: blogs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubuntu
--

SELECT pg_catalog.setval('blogs_id_seq', 1, false);


--
-- Data for Name: schema_migrations; Type: TABLE DATA; Schema: public; Owner: ubuntu
--

COPY schema_migrations (version) FROM stdin;
20161230173652
\.


--
-- Name: ar_internal_metadata_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY ar_internal_metadata
    ADD CONSTRAINT ar_internal_metadata_pkey PRIMARY KEY (key);


--
-- Name: blogs_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY blogs
    ADD CONSTRAINT blogs_pkey PRIMARY KEY (id);


--
-- Name: schema_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY schema_migrations
    ADD CONSTRAINT schema_migrations_pkey PRIMARY KEY (version);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect -reuse-previous=on "dbname='sample-project_test'"

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect template1

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect ubuntu

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'SQL_ASCII';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

